local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Script")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Buscar todos RemoteEvents/RemoteFunctions
local function getAllRemotes(container)
    local remotes = {}
    for _, child in ipairs(container:GetChildren()) do
        if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
            table.insert(remotes, child)
        elseif #child:GetChildren() > 0 then
            local nested = getAllRemotes(child)
            for _, r in ipairs(nested) do
                table.insert(remotes, r)
            end
        end
    end
    return remotes
end

local allRemotes = getAllRemotes(ReplicatedStorage)

local GivePackageRemote, GivePackageToPlayer, SellAllItemsRemote

local function containsIgnoreCase(str, substr)
    return string.find(string.lower(str), string.lower(substr)) ~= nil
end

for _, remote in ipairs(allRemotes) do
    local name = remote.Name
    if containsIgnoreCase(name, "GivePackageRemote") then
        GivePackageRemote = remote
    elseif containsIgnoreCase(name, "GivePackageToPlayer") then
        GivePackageToPlayer = remote
    elseif containsIgnoreCase(name, "SellAllItems") then
        SellAllItemsRemote = remote
    end
end

-- Pega nomes de todas as packages diretamente no ReplicatedStorage
local function getPackageNames()
    local names = {}
    for _, obj in ipairs(ReplicatedStorage:GetChildren()) do
        if string.find(obj.Name, "Package") then
            table.insert(names, obj.Name)
        end
    end
    return names
end

-- Funções principais
local function fireGivePackageRemote(packageName)
    if GivePackageRemote and typeof(GivePackageRemote.FireServer) == "function" then
        task.spawn(function()
            GivePackageRemote:FireServer(packageName)
        end)
    end
end

local function fireGivePackageToPlayer(player, packageName)
    if GivePackageToPlayer and typeof(GivePackageToPlayer.FireServer) == "function" then
        task.spawn(function()
            GivePackageToPlayer:FireServer(player, packageName)
        end)
    end
end

local function fireSellAllItems()
    if SellAllItemsRemote and typeof(SellAllItemsRemote.FireServer) == "function" then
        SellAllItemsRemote:FireServer()
    end
end

-- Toggle Farm Packages (sem delay)
local farm_active = false
Section:CreateToggle("Farm Packages (FAST)", function(state)
    farm_active = state
    if farm_active then
        task.spawn(function()
            while farm_active do
                local packages = getPackageNames()
                for _, name in ipairs(packages) do
                    fireGivePackageRemote(name)
                    fireGivePackageToPlayer(localPlayer, name)
                end
                task.wait() -- mínimo delay para estabilidade
            end
        end)
    end
end)

-- Toggle Auto Rebirth
local AutoRebirthEnabled = false
Section:CreateToggle("Auto Rebirth", function(state)
    AutoRebirthEnabled = state
    if AutoRebirthEnabled then
        task.spawn(function()
            local rebirthEvent = ReplicatedStorage:WaitForChild("RebirthEvent")
            while AutoRebirthEnabled do
                rebirthEvent:FireServer()
                task.wait(2)
            end
        end)
    end
end)

-- Botão de vender todos os itens
Section:CreateButton("Sell All Items", function()
    fireSellAllItems()
    print("Sell All Items disparado!")
end)
