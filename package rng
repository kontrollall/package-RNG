local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "TGMANKASKE Hub",
    LoadingTitle = "TGMANKASKE",
    LoadingSubtitle = "Script Hub",
    ConfigurationSaving = {
        Enabled = false,
    },
    Discord = { Enabled = false },
    KeySystem = false,
})

local Tab = Window:CreateTab("Main", 4483362458)
local Section = Tab:CreateSection("Scripts")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Buscar remotes
local function getAllRemotes(container)
    local remotes = {}
    for _, child in ipairs(container:GetChildren()) do
        if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
            table.insert(remotes, child)
        else
            for _, r in ipairs(getAllRemotes(child)) do
                table.insert(remotes, r)
            end
        end
    end
    return remotes
end

local function findRemote(remotes, keyword)
    for _, r in ipairs(remotes) do
        if r.Name:lower():find(keyword:lower()) then
            return r
        end
    end
end

local allRemotes = getAllRemotes(ReplicatedStorage)
local GivePackageRemote       = findRemote(allRemotes, "GivePackageRemote")
local GivePackageToPlayer     = findRemote(allRemotes, "GivePackageToPlayer")
local SellAllItemsRemote      = findRemote(allRemotes, "SellAllItems")
local RebirthEvent            = findRemote(allRemotes, "RebirthEvent")

-- Nome das packages
local function getPackageNames()
    local pkgs = {}
    for _, obj in ipairs(ReplicatedStorage:GetChildren()) do
        if obj.Name:find("Package") then
            table.insert(pkgs, obj.Name)
        end
    end
    return pkgs
end

-- Disparo seguro
local function safeFire(remote, ...)
    if not remote then
        warn("Remote inválido")
        return
    end
    local ok, err = pcall(function()
        if remote:IsA("RemoteFunction") then
            remote:InvokeServer(...)
        else
            remote:FireServer(...)
        end
    end)
    if not ok then
        warn("Falha ao chamar remote:", err)
    end
end

-- Toggle Farm Packages (ultra rápido)
local farm_active = false
Section:CreateToggle({
    Name = "Farm Packages (FAST)",
    CurrentValue = false,
    Flag = "FarmPackagesFast",
    Callback = function(state)
        farm_active = state
        if farm_active then
            task.spawn(function()
                if not (GivePackageRemote or GivePackageToPlayer) then
                    warn("Remotes de Package não encontrados")
                    return
                end
                while farm_active do
                    local packages = getPackageNames()
                    for _, name in ipairs(packages) do
                        safeFire(GivePackageRemote, name)
                        safeFire(GivePackageToPlayer, localPlayer, name)
                    end
                    task.wait() -- mínimo delay por estabilidade
                end
            end)
        end
    end,
})

-- Toggle Auto Rebirth
Section:CreateToggle({
    Name = "Auto Rebirth",
    CurrentValue = false,
    Flag = "AutoRebirth",
    Callback = function(state)
        local active = state
        if active then
            task.spawn(function()
                if not RebirthEvent then
                    warn("RebirthEvent não encontrado")
                    return
                end
                while active do
                    safeFire(RebirthEvent)
                    task.wait(2)
                end
            end)
        end
    end,
})

-- Botão Sell All Items
Section:CreateButton({
    Name = "Sell All Items",
    Callback = function()
        safeFire(SellAllItemsRemote)
        Rayfield:Notify({
            Title = "Sell All",
            Content = "SellAllItems foi acionado.",
            Duration = 3.5,
            Image = 4483362458
        })
    end,
})
