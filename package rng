local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Credits: TGMANKASKE")
local Section = Window:NewSection("Script")

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- 🔍 Buscar remotes recursivamente
local function getAllRemotes(container)
    local remotes = {}
    for _, child in ipairs(container:GetChildren()) do
        if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
            table.insert(remotes, child)
        elseif #child:GetChildren() > 0 then
            for _, r in ipairs(getAllRemotes(child)) do
                table.insert(remotes, r)
            end
        end
    end
    return remotes
end

-- 🔎 Encontrar remote por parte do nome com segurança
local function findRemoteByName(remotes, keyword)
    for _, remote in ipairs(remotes) do
        if remote.Name:lower():find(keyword:lower()) then
            return remote
        end
    end
end

local allRemotes = getAllRemotes(ReplicatedStorage)

local GivePackageRemote       = findRemoteByName(allRemotes, "GivePackageRemote")
local GivePackageToPlayer     = findRemoteByName(allRemotes, "GivePackageToPlayer")
local SellAllItemsRemote      = findRemoteByName(allRemotes, "SellAllItems")
local RebirthRemote           = findRemoteByName(allRemotes, "RebirthEvent")

-- 📦 Pegar todas as packages pelo nome em ReplicatedStorage
local function getPackageNames()
    local packages = {}
    for _, obj in ipairs(ReplicatedStorage:GetChildren()) do
        if string.find(obj.Name, "Package") then
            table.insert(packages, obj.Name)
        end
    end
    return packages
end

-- 📤 Disparar remotes de forma segura
local function safeFire(remote, ...)
    if not remote then
        warn("[safeFire] remote nil")
        return
    end
    local success, err = pcall(function()
        if remote:IsA("RemoteFunction") then
            remote:InvokeServer(...)
        elseif remote:IsA("RemoteEvent") then
            remote:FireServer(...)
        else
            error("Remote não é válido")
        end
    end)
    if not success then
        warn("[RemoteError]:", err)
    end
end

-- 🚀 Farm Packages rápido e leve
local farm_active = false
Section:CreateToggle("Farm Packages (FAST)", function(state)
    farm_active = state
    if farm_active then
        if not GivePackageRemote and not GivePackageToPlayer then
            warn("Nenhum remote de Package encontrado!")
            return
        end
        task.spawn(function()
            while farm_active do
                local packages = getPackageNames()
                for _, name in ipairs(packages) do
                    safeFire(GivePackageRemote, name)
                    safeFire(GivePackageToPlayer, localPlayer, name)
                end
                task.wait() -- mínimo delay para estabilidade
            end
        end)
    end
end)

-- 🔁 Rebirth Automático
local AutoRebirthEnabled = false
Section:CreateToggle("Auto Rebirth", function(state)
    AutoRebirthEnabled = state
    if AutoRebirthEnabled then
        if not RebirthRemote then
            warn("Remote de Rebirth não encontrado!")
            return
        end
        task.spawn(function()
            while AutoRebirthEnabled do
                safeFire(RebirthRemote)
                task.wait(2)
            end
        end)
    end
end)

-- 🧼 Vender Itens Manualmente
Section:CreateButton("Sell All Items", function()
    safeFire(SellAllItemsRemote)
    print("Sell All Items disparado.")
end)
